name: OpenWrt 构建和发布

on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: 释放空间
        run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android
          
      - name: Cache dl directory
        uses: actions/cache@v4
        with:
          path: dl
          key: ${{ runner.os }}-openwrt-dl-${{ hashFiles('feeds.conf', 'feeds.conf.default') }}
          restore-keys: |
            ${{ runner.os }}-openwrt-dl-

      - name: Cache build_dir directory
        uses: actions/cache@v4
        with:
          path: build_dir
          key: ${{ runner.os }}-openwrt-build_dir-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-openwrt-build_dir-
  
      - name: Cache staging_dir directory
        uses: actions/cache@v4
        with:
          path: staging_dir
          key: ${{ runner.os }}-openwrt-staging_dir-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-openwrt-staging_dir-

      - name: 安装以来
        run: |
          sudo apt update
          sudo apt install build-essential clang flex g++ gawk gcc-multilib gettext \
            git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev

      - name: Checkout
        uses: actions/checkout@v4

      - name: Hook the openwrt_core URL for opkg
        run: |
          OWNER="${GITHUB_REPOSITORY%%/*}"
          REPO="${GITHUB_REPOSITORY#*/}"
          TIME="$(curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" | jq -r .created_at)"

          echo "ci-$(date -d "${TIME}" -u +'%Y%m%d-%H%M%S')-${GITHUB_SHA:0:8}" >version
          sed -i "s|%U/targets/%S/packages|https://${OWNER}.github.io/${REPO}/${GITHUB_REF_NAME}/%R|" include/feeds.mk

      - name: 更新依赖
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configure
        run: |
          cat <<EOF | sed -E 's/^  //' >.config
            CONFIG_TARGET_ipq50xx=y
            CONFIG_TARGET_ipq50xx_arm=y
            CONFIG_TARGET_MULTI_PROFILE=y
            CONFIG_TARGET_ALL_PROFILES=y
            CONFIG_TARGET_PER_DEVICE_ROOTFS=y

            CONFIG_IB=y
            # CONFIG_IB_STANDALONE is not set
            CONFIG_SDK=y
            CONFIG_MAKE_TOOLCHAIN=y

            CONFIG_ALL_NONSHARED=y
            CONFIG_REPRODUCIBLE_DEBUG_INFO=y

            CONFIG_PACKAGE_luci=y

            CONFIG_PACKAGE_luci-i18n-base-zh-cn=y
          EOF
          make defconfig

      - name: Download
        run: |
          make -j16 download

      - name: Build tools
        run: |
          make -j$(nproc) tools/install

      - name: Build toolchain
        run: |
          make -j$(nproc) toolchain/install

      - name: Build all
        run: |
          make -j$(nproc) IGNORE_ERRORS=1

      # - name: 上传bin文件到制品仓库
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: bin-ipq50xx-arm
      #     path: bin/targets/ipq50xx/arm/*

      # - name: 上传dl文件到制品仓库
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: dl
      #     path: dl/*

      - name: 上传ubi/bin文件到制品仓库
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-release-${{ github.ref_name }}
          path: |
            bin/targets/**/openwrt-ipq50xx-arm-redmi_ax3000*.ubi
            bin/targets/**/openwrt-ipq50xx-arm-redmi_ax3000*.bin
  # release:
  #   needs: [ build ]
  #   runs-on: ubuntu-22.04
  #   permissions:
  #     contents: write
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Download dl from artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: dl
  #         path: dl/

  #     - name: Download bin from artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: bin-ipq50xx-arm
  #         path: bin/targets/ipq50xx/arm/

  #     - name: Tar
  #       run: |
  #         tar cvf dl.tar -C dl/ .
  #         tar cvf bin-ipq50xx.tar -C bin/targets/ipq50xx/arm/ .

  #     - name: Generate release informations
  #       run: |
  #         TIME="$(curl "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" | jq -r .created_at)"

  #         TAG="ci-${GITHUB_REF_NAME}-$(date -d "${TIME}" -u +'%Y%m%d-%H%M%S-%Z')"
  #         echo "TAG=$TAG" >>$GITHUB_ENV

  #         cat <<EOF | sed -E 's/^  //' >Release.md
  #           CI ${GITHUB_REF_NAME} $(date -d "${TIME}" -u +'%Y-%m-%d %H:%M:%S %Z(%:z)')

  #           # ${GITHUB_REF_NAME}

  #           Build time: \`$(date -d "${TIME}" -u +'%Y-%m-%d %H:%M:%S %Z(%:z)')\`
  #           Release version: ${TAG}

  #           ## Sources
  #           $(cat bin/targets/ipq50xx/arm/feeds.buildinfo | awk -F'[ ^]' '{printf "%s: `%s`\n", $2, $4}')

  #           ## SHA256
  #           $(cat bin/targets/ipq50xx/arm/sha256sums | awk '{printf "%s: `%s`\n", $2, $1}' | sed -E 's/^\*//')
  #         EOF

  #         echo "NAME=$(head --line=1 Release.md)" >>$GITHUB_ENV
  #         tail --line=+2 Release.md >Body.md

  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         prerelease: true
  #         tag_name: ${{ env.TAG }}
  #         target_commitish: ${{ github.sha }}
  #         name: ${{ env.NAME }}
  #         body_path: Body.md
  #         files: |
  #           bin/targets/ipq50xx/arm/sha256sums
  #           bin/targets/ipq50xx/arm/*.*
  #           *.tar
